From ec7bfc438dcc31e3ead9c0ad449078fd421d87a7 Mon Sep 17 00:00:00 2001
From: Ron Eldor <Ron.Eldor@arm.com>
Date: Mon, 10 Dec 2018 15:14:08 +0200
Subject: [PATCH 31/43] Add buffer size in unhexify in client sample

Add the output buffer size in the `unhexify` function, to verify
`olen` doesn't exceed it.
---
 programs/ssl/ssl_client2.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/programs/ssl/ssl_client2.c b/programs/ssl/ssl_client2.c
index e1246b4c1..7f43bc83e 100644
--- a/programs/ssl/ssl_client2.c
+++ b/programs/ssl/ssl_client2.c
@@ -515,13 +515,15 @@ static int ssl_sig_hashes_for_test[] = {
  * Convert a hex string to bytes.
  * Return 0 on success, -1 on error.
  */
-int unhexify( unsigned char *output, const char *input, size_t *olen )
+int unhexify( unsigned char *output, const char *input,
+              const size_t out_buf_size, size_t *olen )
 {
     unsigned char c;
     size_t j;
 
     *olen = strlen( input );
-    if( *olen % 2 != 0 || *olen / 2 > MBEDTLS_PSK_MAX_LEN )
+    if( *olen % 2 != 0 ||
+        *olen / 2 > out_buf_size )
         return( -1 );
     *olen /= 2;
 
@@ -1155,7 +1157,7 @@ int main( int argc, char *argv[] )
     /*
      * Unhexify the pre-shared key if any is given
      */
-    if( unhexify( psk, opt.psk, &psk_len ) != 0 )
+    if( unhexify( psk, opt.psk, sizeof( psk ), &psk_len ) != 0 )
     {
         mbedtls_printf( "pre-shared key not valid hex\n" );
         goto exit;
@@ -1663,7 +1665,7 @@ int main( int argc, char *argv[] )
     #if defined(MBEDTLS_SSL_DTLS_SRTP)
     if( opt.use_srtp != DFL_USE_SRTP &&  strlen( opt.mki ) != 0 )
     {
-        if( unhexify( mki, opt.mki, &mki_len ) != 0 )
+        if( unhexify( mki, opt.mki, sizeof( mki ), &mki_len ) != 0 )
         {
             mbedtls_printf( "mki value not valid hex\n" );
              goto exit;
-- 
2.17.1

